// Imports // --------------------------------------------------

// Import colors
@import "./colors.less";

// Import colors.css
@import "../style/colors.css";

// Import colors.css
@import "./colors.css";

// Import z-index values
@import "./z-index.less";

// Import text styles
@import "./text-styles.less";

// Import utilities
@import "./utilities.less";

// Import mixins
@import "./mixins.less";

* {
  scrollbar-width: thin;
}

// Main component style // --------------------------------------------------

.mainComponent {
  position: relative;
}
.mainComponent-minimized {
  overflow: hidden;
}

// Only show minimizer button when hovering component
.mainComponent > .minimizer > .minimizeButton {
  display: none;
}
.mainComponent:hover > .minimizer > .minimizeButton {
  display: block;
}

.visualComponent {
  background-color: @color-background;
  margin: 4px;
  box-shadow: 0 1px 2px 0 @color-shadow;
  padding: 5px;
}
.componentTitle {
  letter-spacing: 0.2em;
  .fontWeight-heavy;
  text-align: center;
}

// Table styles // --------------------------------------------------

.table-wrapper {
  position: relative;
  flex: 1 1 auto;
  height: 0;
  margin: 10px auto 5px auto;
  max-width: 97%;
}
.table {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 98%;
  overflow: hidden;
  text-align: center;
}
.table-head {
  display: block;
  flex: 0 0 auto;
  overflow-y: auto;
  overflow: hidden;
}
.table-body {
  display: block;
  flex: 1 1 auto;
  overflow: auto;
}

// General styles // --------------------------------------------------

p {
  margin: 3px 0 !important;
}
a:link, a:visited, a:active {
  color: var(--color-link);
}
a:hover, .alert a:hover {
  text-decoration: none;
  color: var(--color-link-hover);
}
.page-link {
  color: var(--color-link) !important;
}
.page-item.disabled > .page-link {
  color: var(--color-text-lightGrey) !important;
}
.page-link:hover {
  color: var(--color-link-hover) !important;
}

ul {
  padding-left: 20px;
}

h1 {
  font-size: 1.85rem;
}
h2 {
  font-size: 1.7rem;
}
h3 {
  font-size: 1.55rem;
}
h4 {
  font-size: 1.35rem;
}
h5 {
  font-size: 1.25rem;
}
h6 {
  font-size: 1.2rem;
}

// Button styles // --------------------------------------------------

.button {
  cursor: pointer;
  user-select: none;
  vertical-align: middle;
  color: @color-button;
}
.button:hover {
  color: @color-button-hover;
}
.button-disabled {
  user-select: none;
  vertical-align: middle;
  color: @color-button-disabled;
}
.button-delete {
  .button();
  color: @color-button-delete;
}
.button-delete:hover {
  color: @color-button-delete-hover;
}

// Button click animation (makes buttons feel more "alive")
.button, button {
  transition: all .2s ease-in-out;
}
.button:not(.button-disabled):active, button:not(:disabled):active {
  transform: translateY(1px);
}

.utilityButton {
  .fontWeight-heavy;
  cursor: pointer;
  user-select: none;
  position: absolute;
  font-size: 11px;
  right: 0px;
  top: 0px;
  width: 20px;
  height: 20px;
  z-index: @zIndex-4;
  color: fadeout(@color-button, 70%);
  background-color: fadeout(@color-button-disabled, 80%);
}
.utilityButton:hover {
  color: fadeout(@color-button, 40%);
  background-color: fadeout(@color-button-disabled, 60%);
}

// These are here and not in the component because the button might be used somewhere else separately (e.g. MappingDetails).
.dataModalButton {
  z-index: @zIndex-3;
  position: absolute;
  bottom: 0px;
  right: 5px;
  color: var(--color-text-mediumLightGrey);
  cursor: pointer;
}
.dataModalButton:hover {
  color: @color-button-hover;
}

// Mapped status of concept items
.concept-mappingsExist {
  border-right: 5px solid var(--color-success);
}
.concept-mappingsDoNotExist {
  border-right: 5px solid @color-background;
}

// Favorite stars

.pointer {
  cursor: pointer;
}
.starFavorite {
  color: var(--color-primary);
  margin-right: 5px;
}
.starFavorite:hover, .starNormal:hover {
  color: @color-button-hover;
}
.starNormal {
  color: @color-button-faded;
  margin-right: 5px;
}

.missingDataIndicator {
  color: var(--color-danger) !important;
  font-weight: bold;
  display: inline;
  user-select: none;
}

// Other styles // --------------------------------------------------

.selected {
  background-color: @color-secondary;
  .fontWeight-heavy;
}

.scrollable {
  overflow-y: auto;
}

.collapsed > .when-opened,
:not(.collapsed) > .when-closed {
  display: none;
}

/* Overwrite the default to keep the scrollbar always visible */
::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 9px;
  height: 9px;
}
::-webkit-scrollbar-thumb {
  .m-borderRadius(6px);
  box-shadow: inset 0 0 5px 5px #AEAEAE;
  border: solid 1px transparent;
}

// Override bootstrap styles
.custom-control-label:before{
  background-color: @color-background-secondary !important;
}
.custom-checkbox .custom-control-input:checked~.custom-control-label::before{
  background-color: @color-button !important;
}
.popover {
  max-width: 400px !important;
}
.custom-control-label {
  line-height: 16px;
  padding-top: 3px;
  margin: 2px 0;
}
.form-control.is-valid, .form-control.is-invalid {
  padding-right: 8px !important;
  background-image: none !important;
}
.cocoda-vue-tabs-content {
  overflow: auto !important;
}
.modal-content, .popover-body {
  .font-default;
}
// bootstrap buttons
.btn-primary, .btn-primary:active, .btn-primary:focus {
  background-color: var(--color-primary) !important;
  border-color: var(--color-primary-dark) !important;
}
.btn-primary:hover {
  background-color: var(--color-primary-light) !important;
  border-color: var(--color-primary) !important;
}
.btn-success {
  background-color: var(--color-success);
}
.btn-success:hover {
  background-color: @color-success-dark;
}
.btn-warning {
  background-color: var(--color-warning);
}
.btn-warning:hover {
  background-color: @color-warning-dark;
}
.btn-danger {
  background-color: var(--color-danger);
}
.btn-danger:hover {
  background-color: @color-danger-dark;
}
// bootstrap text
.text-success {
  color: var(--color-success) !important;
}
.text-warning {
  color: @color-warning-dark !important;
}
.text-danger {
  color: var(--color-danger) !important;
}
// bootstrap alerts
.alert-success {
  color: @color-success-dark !important;
  background-color: lighten(@color-success-light, 50%) !important;
  border-color: @color-success-light !important;
}
.alert-warning {
  color: darken(@color-warning-dark, 25%) !important;
  background-color: @color-warning-light !important;
  border-color: var(--color-warning) !important;
}
.alert-danger {
  color: @color-danger-dark !important;
  background-color: lighten(@color-danger-light, 30%) !important;
  border-color: lighten(@color-danger-light, 15%) !important;
}

// Orders
.order1 {
  order: 1;
}
.order2 {
  order: 2;
}
.order3 {
  order: 3;
}
.order4 {
  order: 4;
}
.order5 {
  order: 5;
}

// Workaround for broken tooltip positioning: https://github.com/bootstrap-vue/bootstrap-vue/issues/1732#issuecomment-381381818
.tooltip { top: 0; }

// Keyboard shortcuts
div kbd {
  background-color: #f7f7f7;
  border: 1px solid #ccc;
  border-radius: 3px;
  box-shadow: 0 1px 0 @color-shadow,0 0 0 2px #fff inset;
  color: #333;
  display: inline-block;
  font-size: 11px;
  line-height: 1.4;
  margin: 0 .1em;
  padding: .1em .6em;
}
